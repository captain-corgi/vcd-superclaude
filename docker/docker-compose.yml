version: '3.8'

services:
  # Main application
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: multi-agent-system
    ports:
      - "8080:8080"
    environment:
      - APP_NAME=multi-agent-system
      - APP_VERSION=1.0.0
      - APP_DEBUG=false
      - APP_PORT=8080
      - APP_TIMEOUT=30s
      - DATABASE_URL=postgres://postgres:password@postgres:5432/multiagent?sslmode=disable
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - multi-agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: multi-agent-db
    environment:
      POSTGRES_DB: multiagent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - multi-agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: multi-agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ../docker/redis.conf:/etc/redis/redis.conf
    networks:
      - multi-agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    command: redis-server /etc/redis/redis.conf

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: multi-agent-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - multi-agent-network
    restart: unless-stopped
    depends_on:
      - postgres

  # Redis Commander (optional - for Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: multi-agent-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8082:8081"
    networks:
      - multi-agent-network
    restart: unless-stopped
    depends_on:
      - redis

networks:
  multi-agent-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local